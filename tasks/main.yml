---
- name: INSTALL | vim
  tags:
    - install
  block:
    - name: INSTALL | Ensure vim is installed
      become: True
      ansible.builtin.apt:
        name: vim
        state: present
  
    - name: INSTALL | Ensure plugin requirements are installed
      become: True
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items: "{{ APT_REQUIREMENTS }}"
      when: APT_REQUIREMENTS is defined

- name: CONFIGURE | vim
  tags:
  - configure
  block:
    - name: CONFIGURE | Find existing vim config files
      ansible.builtin.find:
        paths: "{{ ansible_user_dir }}"
        recurse: True
        hidden: True
        patterns:
          - '.vimrc'
          - 'vimrc'
        file_type: file
      register: vimrc_files

    - name: CONFIGURE | Ensure VIMRC path exists when set
      ansible.builtin.file:
        path: "{{ MYVIMRC | dirname }}"
        state: directory
      when: MYVIMRC is defined

    - name: CONFIGURE | Ensure VIMRC folders exist when set
      ansible.builtin.file:
        path: "{{ MYVIMRC | dirname }}/{{ item }}"
        state: directory
      when: MYVIMRC is defined
      with_items:
        - autoload

    - name: CONFIGURE | Move found vimrc files to MYVIMRC dirname
      ansible.builtin.command:
        cmd: mv "{{ item.path }}" "{{ MYVIMRC | dirname }}/"
      with_items: "{{ vimrc_files.files }}"
      when:
        - MYVIMRC is defined
        - item.path != (MYVIMRC | dirname + '/' + item.path | basename)
      loop_control:
        label: "{{ item.path }}"

    - name: CONFIGURE | Ensure runtimepath is configured in vimrc
      ansible.builtin.lineinfile:
        create: True
        path: "{{ MYVIMRC }}"
        line: "set runtimepath^={{ MYVIMRC | dirname }}"
        insertbefore: BOF
      when: MYVIMRC is defined

    - name: CONFIGURE | Ensure vim-plug is installed
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "{{ MYVIMRC | dirname }}/autoload/"
      when: MYVIMRC is defined

    - name: CONFIGURE | Ensure plug#begin statement is present in vimrc
      ansible.builtin.lineinfile:
        create: True
        path: "{{ MYVIMRC }}"
        line: "call plug#begin()"
        insertbefore: "call plug#end()"
      when: MYVIMRC is defined

    - name: CONFIGURE | Ensure plug#end statement is present in vimrc
      ansible.builtin.lineinfile:
        create: True
        path: "{{ MYVIMRC }}"
        line: "call plug#end()"
        insertafter: "call plug#begin()"
      when: MYVIMRC is defined

    - name: CONFIGURE | Ensure plugins are added to vimrc
      ansible.builtin.lineinfile:
        create: True
        path: "{{ MYVIMRC }}"
        line: "{{ item }}"
        insertbefore: "call plug#end()"
      with_items: "{{ VIM_PLUG_PLUGINS }}"
      when: VIM_PLUG_PLUGINS is defined and MYVIMRC is defined
